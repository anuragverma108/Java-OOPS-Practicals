public class TicTacToe {
    private char[][] grid = new char[3][3];
    private int moves = 0;

    public void drawGrid() {
        System.out.println(" " + grid[0][0] + " | " + grid[0][1] + " | " + grid[0][2]);
        System.out.println("---+---+---");
        System.out.println(" " + grid[1][0] + " | " + grid[1][1] + " | " + grid[1][2]);
        System.out.println("---+---+---");
        System.out.println(" " + grid[2][0] + " | " + grid[2][1] + " | " + grid[2][2]);
    }

    public void playGame() {
        int currentPlayer = 1;
        for (int i = 0; i < 3; i++) {
            for (int j = 0; j < 3; j++) {
                grid[i][j] = ' ';
            }
        }
        while (true) {
            drawGrid();
            System.out.println("Player " + currentPlayer + "'s turn. Enter a number (1-9):");
            int move = Integer.parseInt(System.console().readLine());
            int row = (move - 1) / 3;
            int col = (move - 1) % 3;
            if (grid[row][col] != ' ') {
                System.out.println("Invalid move. Try again.");
                continue;
            }
            grid[row][col] = (currentPlayer == 1) ? 'X' : 'O';
            moves++;
            if (checkWin()) {
                drawGrid();
                System.out.println("Player " + currentPlayer + " wins!");
                break;
            } else if (moves == 9) {
                drawGrid();
                System.out.println("It's a tie!");
                break;
            }
            currentPlayer = (currentPlayer == 1) ? 2 : 1;
        }
    }

    public boolean checkWin() {
        for (int i = 0; i < 3; i++) {
            if (grid[i][0] != ' ' && grid[i][0] == grid[i][1] && grid[i][0] == grid[i][2]) {
                return true;
            }
            if (grid[0][i] != ' ' && grid[0][i] == grid[1][i] && grid[0][i] == grid[2][i]) {
                return true;
            }
        }
        // Check diagonals
        if (grid[0][0] != ' ' && grid[0][0] == grid[1][1] && grid[0][0] == grid[2][2]) {
            return true;
        }
        if (grid[0][2] != ' ' && grid[0][2] == grid[1][1] && grid[0][2] == grid[2][0]) {
            return true;
        }
        return false;
    }

    public static void main(String[] args) {
        TicTacToe game = new TicTacToe();
        game.playGame();
    }
}